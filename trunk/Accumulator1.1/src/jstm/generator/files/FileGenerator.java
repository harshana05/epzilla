/**
 * JSTM (http://jstm.sourceforge.net)
 * Distributed under the Apache License Version 2.0
 * Copyright © 2006-2007 Cyprien Noel
 */

package jstm.generator.files;

import java.io.File;
import java.io.FileWriter;
import java.io.IOException;
import java.lang.reflect.Method;

public abstract class FileGenerator {

    public final String Name;

    public final String Package;

    private final FileWriter _writer;

    private String _tab = "";

    private static final String NEW_LINE = System.getProperty("line.separator");

    protected FileGenerator(String folder, String packag, String name) {
        Package = packag;
        Name = name;

        String path = folder + "/" + packag.replace('.', '/');
        String file = new File(path).getAbsolutePath() + "/" + name + getExtension();

        System.out.println("Generating " + file);

        try {
            _writer = new FileWriter(file);
        } catch (IOException ex) {
            throw new RuntimeException(ex);
        }

        wl("//==============================================================================");
        wl("//                                                                              ");
        wl("//  THIS FILE HAS BEEN GENERATED BY JSTM                                        ");
        wl("//                                                                              ");
        wl("//==============================================================================");
        wl();
    }

    protected String getExtension() {
        return ".java";
    }

    protected void header() {
    }

    protected void body() {
    }

    protected void footer() {
    }

    public final void write() {
        header();
        body();
        footer();

        try {
            _writer.close();
        } catch (IOException ex) {
            throw new RuntimeException(ex);
        }
    }

    protected void wl() {
        try {
            _writer.write(NEW_LINE);
        } catch (IOException ex) {
            throw new RuntimeException(ex);
        }
    }

    protected void wl(String line) {
        try {
            _writer.write(_tab + line + NEW_LINE);
        } catch (IOException ex) {
            throw new RuntimeException(ex);
        }
    }

    protected void tab() {
        _tab += "    ";
    }

    protected void untab() {
        _tab = _tab.substring(4);
    }

    protected String getReturned(Method method) {
        if (method.getReturnType().isArray())
            return method.getReturnType().getComponentType().getName() + "[]";

        return method.getReturnType().getName();
    }

    protected String addParameterTypeString(Class type, String current) {
        if (current.length() > 0)
            current += ", ";

        if (type.isArray())
            current += type.getComponentType().getName() + "[]";
        else
            current += type.getName();

        return current;
    }
}
